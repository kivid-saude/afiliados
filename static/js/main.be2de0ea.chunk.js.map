{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","services/auth.js","lib/client-api.js","services/user.ts","hooks/useUser.ts","pages/SignUp.tsx","components/PrivateRoute.tsx","pages/Tab1.tsx","pages/Tab2.tsx","pages/Tab3.tsx","pages/Tabs.tsx","pages/SignIn.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","tokenKey","getToken","localStorage","setToken","token","removeToken","removeItem","isLoggedIn","config","headers","Accept","responseInterceptor","response","status","window","location","reload","fetcher","url","a","options","Authorization","fetch","json","data","ok","message","get","post","body","method","JSON","stringify","client","endpoint","getAll","create","save","put","update","patch","remove","users","process","user","auth","signIn","signUp","signOut","sales","clientApi","useUser","useSWR","error","mutate","isValidating","Auth","access_token","logout","console","log","getSalesList","isLoading","SignUp","useState","name","email","password","formData","setFormData","submit","event","preventDefault","userCreated","slot","text","fullscreen","collapse","size","className","onSubmit","position","type","value","onIonChange","detail","autocapitalize","autocomplete","required","expand","shape","fill","routerLink","routerDirection","PrivateRoute","children","rest","to","Tab1","nickname","icon","keyOutline","style","color","letterSpacing","Tab2","setSales","useEffect","alert","formatPrice","price","Intl","NumberFormat","currency","format","length","total","reduce","acc","cur","plan_type","getTotal","item","buyer","Date","created_at","toLocaleDateString","comission","Tab3","history","useHistory","handleLogout","replace","lines","readonly","onClick","Tabs","match","useRouteMatch","exact","path","tab","href","homeOutline","bagCheckOutline","personOutline","SignIn","showModal","setShowModal","isOpen","closeOutline","setupIonicReact","mode","App","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.be2de0ea.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 55;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 56;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t77,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 57;\nmodule.exports = webpackAsyncContext;","const tokenKey = \"kivid-affiliates:token\";\nexport const getToken = () => localStorage[tokenKey];\nexport const setToken = (token) => (localStorage[tokenKey] = token);\nexport const removeToken = () => localStorage.removeItem(tokenKey);\nexport const isLoggedIn = () => !!getToken();\n","import { getToken, removeToken } from \"services/auth\";\n\n// Client API\n\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"App-Type\": 2,\n  },\n};\n\nconst responseInterceptor = (response) => {\n  if (response.status === 401) {\n    removeToken();\n    window.location.reload();\n  }\n};\n\nexport const fetcher = async (url, { headers, ...options } = {}) => {\n  const token = getToken();\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n\n  const response = await fetch(url, {\n    headers: {\n      ...config.headers,\n      ...headers,\n    },\n    ...options,\n  });\n\n  responseInterceptor(response);\n\n  const data = await response.json();\n\n  if (!response.ok && response.status !== 401) throw new Error(data.message);\n\n  return data;\n};\n\nexport const get = (url) => fetcher(url);\n\nexport const post = (url, body) =>\n  fetcher(url, {\n    method: \"POST\",\n    body: JSON.stringify(body),\n  });\n\nexport const put = (url, body) =>\n  fetcher(url, {\n    method: \"PUT\",\n    body: JSON.stringify(body),\n  });\n\nexport const patch = (url, body) =>\n  fetcher(url, {\n    method: \"PATCH\",\n    body: JSON.stringify(body),\n  });\n\nexport const remove = (url) =>\n  fetcher(url, {\n    method: \"DELETE\",\n  });\n\nconst client = (endpoint) => ({\n  get: (id) => get(`${endpoint}/${id}`),\n  getAll: () => get(`${endpoint}`),\n  create: (body) => post(`${endpoint}`, body),\n  post: (body) => post(`${endpoint}`, body),\n  save: (id, body) => put(`${endpoint}/${id}`, body),\n  update: (id, body) => patch(`${endpoint}/${id}`, body),\n  remove: (id) => remove(`${endpoint}/${id}`),\n});\n\nexport default client;\n","import { User } from \"types/User\";\nimport clientApi, { post } from \"lib/client-api\";\n\n// Users API\nexport const endpoint: any = {\n  users: () => process.env.REACT_APP_APP_API_PATH + \"/users\",\n  user: () => process.env.REACT_APP_APP_API_PATH + \"/user\",\n  auth: () => process.env.REACT_APP_APP_API_PATH + \"/auth\",\n  signIn: () => `${endpoint.auth()}/login`,\n  signUp: () => `${endpoint.auth()}/sign-up`,\n  signOut: () => `${endpoint.auth()}/logout`,\n  sales: () => process.env.REACT_APP_APP_API_PATH + \"/affiliate-invitations\",\n};\n\nexport const usersApi = clientApi(endpoint.users);\nexport const saveUser = async (user: User) => usersApi.get(user);\nexport const signIn = async (user: User) => post(endpoint.signIn(), user);\nexport const signUp = async (user: User) => post(endpoint.signUp(), user);\nexport const signOut = async () => post(endpoint.signOut(), {});\n","import useSWR from \"swr\";\nimport { fetcher, get } from \"lib/client-api\";\nimport * as Auth from \"services/user\";\nimport { endpoint } from \"services/user\";\nimport { User } from \"types/User\";\nimport { getToken, removeToken, setToken } from \"services/auth\";\nimport { useState } from \"react\";\n\nexport const useUser = (id: string = \"\") => {\n  const token = getToken();\n\n  const { data, error, mutate, isValidating } = useSWR(\n    token ? endpoint.user() : null,\n    fetcher,\n    {\n      // revalidateIfStale: false,\n      // revalidateOnFocus: false,\n      // revalidateOnReconnect: true,\n      // refreshWhenHidden: false,\n      // refreshWhenOffline: false,\n      // refreshInterval: 0,\n    }\n  );\n\n  const signIn = async (user: User) => {\n    const data = await Auth.signIn(user);\n    setToken(data.access_token);\n    mutate();\n    return data;\n  };\n\n  const signUp = async (user: User) => {\n    await Auth.signUp(user);\n    return user;\n  };\n\n  const logout = async () => {\n    try {\n      await Auth.signOut();\n      // mutate();\n    } catch (error) {\n      console.log(\"Error\", error);\n    }\n    removeToken();\n    setToken(null);\n  };\n\n  const getSalesList = () => {\n    return get(endpoint.sales());\n  }\n\n  return {\n    data,\n    mutate,\n    user: data?.data,\n    isValidating,\n    isLoading: !error && !data?.data,\n    token,\n    signUp,\n    signIn,\n    logout,\n    getSalesList\n  };\n};\n","import {\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { useUser } from \"hooks/useUser\";\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { User } from \"types/User\";\n\nconst SignUp: React.FC = () => {\n  const { signUp } = useUser();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  // useEffect(() => {\n  //   console.log(user);\n  //   !!user && setFormData(user);\n  // }, [user]);\n\n  const submit = async (event: FormEvent, user: User) => {\n    event.preventDefault();\n    console.log(user);\n    const userCreated = await signUp(user);\n    console.log({ userCreated });\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Cadastro</IonTitle>\n          <IonButtons slot=\"start\">\n            <IonBackButton text=\"Login\" />\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Cadastro</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <form\n          className=\"ion-margin-top ion-margin-bottom\"\n          onSubmit={(e) => submit(e, formData)}\n        >\n          <IonItem>\n            <IonLabel position=\"floating\">Nome</IonLabel>\n            <IonInput\n              type=\"text\"\n              value={formData?.name}\n              onIonChange={(e) =>\n                setFormData({ ...formData, name: e.detail.value! })\n              }\n              autocapitalize=\"words\"\n              autocomplete=\"name\"\n              required\n            />\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"floating\">E-mail</IonLabel>\n            <IonInput\n              type=\"email\"\n              value={formData?.email}\n              onIonChange={(e) =>\n                setFormData({ ...formData, email: e.detail.value! })\n              }\n              autocomplete=\"email\"\n              required\n            />\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"floating\">Senha</IonLabel>\n            <IonInput\n              type=\"text\"\n              value={formData?.password}\n              onIonChange={(e) =>\n                setFormData({ ...formData, password: e.detail.value! })\n              }\n              autocomplete=\"new-password\"\n              required\n            />\n          </IonItem>\n\n          <div className=\"ion-margin-top ion-padding\">\n            <IonButton type=\"submit\" expand=\"block\" shape=\"round\" size=\"large\">\n              Cadastrar\n            </IonButton>\n            <IonRow className=\"ion-justify-content-center ion-margin-top\">\n              <IonButton\n                type=\"button\"\n                fill=\"clear\"\n                shape=\"round\"\n                size=\"small\"\n                routerLink=\"/login\"\n                routerDirection=\"back\"\n              >\n                Já tenho conta\n              </IonButton>\n            </IonRow>\n          </div>\n        </form>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SignUp;\n","import { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { isLoggedIn } from \"services/auth\";\n\nconst PrivateRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\n  console.log({ isLoggedIn: isLoggedIn() });\n\n  return (\n    <Route\n      {...rest}\n      children={isLoggedIn() ? children : <Redirect to=\"/login\" />}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  IonCard,\n  IonCardContent,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonPage,\n  IonText,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { useUser } from \"hooks/useUser\";\nimport { keyOutline } from \"ionicons/icons\";\n\nconst Tab1: React.FC = () => {\n  const { user } = useUser();\n  console.log({ user });\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>{user?.nickname}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Olá, {user?.nickname}.</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonCard className=\"ion-border\">\n          <IonCardContent className=\"py-6 px-7\">\n            <div>\n              <IonIcon\n                icon={keyOutline}\n                className=\"text-5xl mr-6 opacity-70\"\n                style={{ \"--ionicon-stroke-width\": 16 }}\n              />\n              <div className=\"mt-4\">\n                <IonText className=\"opacity-70\">Seu código de vendedor</IonText>\n                <IonText\n                  color=\"primary\"\n                  className=\"block text-3xl mt-2 font-bold\"\n                  style={{ letterSpacing: \"0.05em\" }}\n                >\n                  {user?.id}\n                </IonText>\n              </div>\n            </div>\n          </IonCardContent>\n        </IonCard>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tab1;\n","import { useEffect, useState } from \"react\";\nimport {\n  IonCard,\n  IonCardContent,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonHeader,\n  IonPage,\n  IonRow,\n  IonText,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { useUser } from \"hooks/useUser\";\n\nconst Tab2: React.FC = () => {\n  const { getSalesList } = useUser();\n  const [sales, setSales] = useState<any[] | null>(null);\n\n  const comission = 0.1;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data: sales } = await getSalesList();\n        console.log({ sales });\n        setSales(sales);\n      } catch (error: any) {\n        alert(error.message);\n      }\n    })();\n  }, []);\n\n  const getTotal = () => {\n    const total = sales?.reduce((acc, cur) => {\n      const price = comission * cur.plan_type.price;\n      return acc + price;\n    }, 0);\n    return formatPrice(total);\n  };\n\n  const getReceived = (price: number) => {\n    return formatPrice(price * comission);\n  };\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    }).format(price);\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Vendas</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Vendas</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <section className=\"ion-padding-start ion-padding-end mt-4\">\n          <div>\n            Quantidade de vendas: <b>{sales?.length || 0}</b>\n          </div>\n          <div className=\"mt-1\">\n            Total recebido:{\" \"}\n            <IonText color=\"success\">\n              <b>{(sales?.length && getTotal()) || 0}</b>\n            </IonText>\n          </div>\n        </section>\n\n        <section className=\"my-8\">\n          {sales?.map((item) => (\n            <IonCard key={item.id}>\n              <IonCardContent className=\"p-4\">\n                <IonGrid>\n                  <IonRow>\n                    <IonCol size=\"6\">\n                      <p>Cliente</p>\n                      <IonText color=\"dark\" className=\"font-bold\">\n                        <p>{item.buyer.name}</p>\n                      </IonText>\n                    </IonCol>\n                    <IonCol size=\"6\">\n                      <p>Plano comprado</p>\n                      <IonText color=\"dark\">\n                        <p>{item.plan_type.name}</p>\n                      </IonText>\n                    </IonCol>\n                  </IonRow>\n\n                  <IonRow>\n                    <IonCol size=\"6\">\n                      <p>Valor do plano</p>\n                      <IonText color=\"dark\">\n                        <p>{formatPrice(item.plan_type.price)}</p>\n                      </IonText>\n                    </IonCol>\n                    <IonCol size=\"6\">\n                      <p>Data da compra</p>\n                      <IonText color=\"dark\">\n                        <p>{new Date(item.created_at).toLocaleDateString()}</p>\n                      </IonText>\n                    </IonCol>\n                  </IonRow>\n\n                  <IonRow>\n                    <IonCol size=\"6\">\n                      <p>Valor do recebido</p>\n                      <IonText color=\"success\" className=\"font-bold\">\n                        <p>\n                          {comission * 100}% (\n                          {getReceived(item.plan_type.price)})\n                        </p>\n                      </IonText>\n                    </IonCol>\n                  </IonRow>\n                </IonGrid>\n              </IonCardContent>\n            </IonCard>\n          )) || (\n            <div className=\"ion-padding\">Você não tem vendas realizadas.</div>\n          )}\n        </section>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tab2;\n","import {\n  IonButton,\n  IonContent,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { useUser } from \"hooks/useUser\";\nimport { useHistory } from \"react-router\";\n\nconst Tab3: React.FC = () => {\n  const history = useHistory();\n  const { logout, user } = useUser();\n\n  const handleLogout = async () => {\n    await logout();\n    history.replace(\"/login\");\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Perfil</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Perfil</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <section>\n          <IonList lines=\"none\" className=\"mt-4\">\n            <IonItem>\n              <IonLabel position=\"stacked\">Nome</IonLabel>\n              <IonInput readonly>{user?.name}</IonInput>\n            </IonItem>\n            <IonItem>\n              <IonLabel position=\"stacked\">E-mail</IonLabel>\n              <IonInput readonly>{user?.email}</IonInput>\n            </IonItem>\n          </IonList>\n\n          <IonButton\n            color=\"danger\"\n            expand=\"block\"\n            fill=\"outline\"\n            className=\"mx-6 my-8\"\n            onClick={handleLogout}\n          >\n            Sair\n          </IonButton>\n        </section>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tab3;\n","import {\n  IonTabs,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonIcon,\n  IonLabel,\n} from \"@ionic/react\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { personOutline, homeOutline, bagCheckOutline } from \"ionicons/icons\";\nimport { Redirect, useRouteMatch } from \"react-router\";\nimport Tab1 from \"./Tab1\";\nimport Tab2 from \"./Tab2\";\nimport Tab3 from \"./Tab3\";\n\nconst Tabs: React.FC = () => {\n  const match = useRouteMatch();\n\n  return (\n    <IonTabs>\n      <IonRouterOutlet>\n        <PrivateRoute exact path={`${match.path}/tab1`}>\n          <Tab1 />\n        </PrivateRoute>\n        <PrivateRoute exact path={`${match.path}/tab2`}>\n          <Tab2 />\n        </PrivateRoute>\n        <PrivateRoute exact path={`${match.path}/tab3`}>\n          <Tab3 />\n        </PrivateRoute>\n        <PrivateRoute exact path={match.path}>\n          <Redirect to={`${match.path}/tab1`} />\n        </PrivateRoute>\n      </IonRouterOutlet>\n\n      <IonTabBar slot=\"bottom\">\n        <IonTabButton\n          tab=\"tab1\"\n          href={`${match.path}/tab1`}\n          style={{ \"--color-selected\": \"var(--ion-color-dark)\" }}\n        >\n          <IonIcon icon={homeOutline} />\n          <IonLabel>Início</IonLabel>\n        </IonTabButton>\n        <IonTabButton\n          tab=\"tab2\"\n          href={`${match.path}/tab2`}\n          style={{ \"--color-selected\": \"var(--ion-color-dark)\" }}\n        >\n          <IonIcon icon={bagCheckOutline} />\n          <IonLabel>Vendas</IonLabel>\n        </IonTabButton>\n        <IonTabButton\n          tab=\"tab3\"\n          href={`${match.path}/tab3`}\n          style={{ \"--color-selected\": \"var(--ion-color-dark)\" }}\n        >\n          <IonIcon icon={personOutline} />\n          <IonLabel>Perfil</IonLabel>\n        </IonTabButton>\n      </IonTabBar>\n    </IonTabs>\n  );\n};\n\nexport default Tabs;\n","import {\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonCard,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonModal,\n  IonPage,\n  IonRow,\n  IonText,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { useUser } from \"hooks/useUser\";\nimport { closeOutline } from \"ionicons/icons\";\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { User } from \"types/User\";\n\nconst SignIn: React.FC = () => {\n  const { signIn, token } = useUser();\n  const history = useHistory();\n  const [showModal, setShowModal] = useState(false);\n\n  // useEffect(() => {\n  //   if (token) history.replace(\"/\");\n  // }, [history, token]);\n\n  const [formData, setFormData] = useState<any>({\n    email: \"\",\n    password: \"\",\n  });\n\n  const submit = async (event: FormEvent, user: User) => {\n    event.preventDefault();\n    console.log(user);\n    try {\n      const response = await signIn(user);\n      console.log({ response });\n      history.replace(\"/\");\n    } catch (error: any) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Kivid Afiliados</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <section className=\"h-full grid auto-rows-min\">\n          {/* <IonHeader collapse=\"condense\">\n            <IonToolbar>\n              <IonTitle size=\"large\">Kivid Afiliados</IonTitle>\n            </IonToolbar>\n          </IonHeader> */}\n\n          <div>\n            <IonCard>\n              <form className=\"py-6\" onSubmit={(e) => submit(e, formData)}>\n                <IonText\n                  color=\"dark\"\n                  className=\"block mt-0 mb-4 ion-padding-start text-2xl\"\n                >\n                  <b>Faça login</b>\n                  <br />\n                  na sua conta Kivid\n                </IonText>\n\n                <IonItem>\n                  <IonLabel position=\"floating\">E-mail</IonLabel>\n                  <IonInput\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData?.email}\n                    onIonChange={(e) =>\n                      setFormData({ ...formData, email: e.detail.value! })\n                    }\n                    autocomplete=\"email\"\n                    required\n                  />\n                </IonItem>\n\n                <IonItem>\n                  <IonLabel position=\"floating\">Senha</IonLabel>\n                  <IonInput\n                    type=\"password\"\n                    value={formData?.password}\n                    onIonChange={(e) =>\n                      setFormData({ ...formData, password: e.detail.value! })\n                    }\n                    autocomplete=\"current-password\"\n                    name=\"password\"\n                    required\n                  />\n                </IonItem>\n\n                <div className=\"mt-8 px-4\">\n                  <IonButton\n                    type=\"submit\"\n                    expand=\"block\"\n                    shape=\"round\"\n                    size=\"large\"\n                  >\n                    Entrar\n                  </IonButton>\n                </div>\n              </form>\n            </IonCard>\n          </div>\n\n          <footer>\n            <div className=\"container px-6\">\n              Li e aceito os{\" \"}\n              <IonText color=\"primary\" onClick={() => setShowModal(true)}>\n                Termos de Uso.\n              </IonText>\n            </div>\n          </footer>\n        </section>\n      </IonContent>\n\n      <IonModal id=\"modal-terms\" isOpen={showModal}>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>Termos de uso</IonTitle>\n\n            <IonButtons slot=\"end\">\n              <IonButton onClick={() => setShowModal(false)}>\n                <IonIcon\n                  color=\"dark\"\n                  slot=\"icon-only\"\n                  onClick={() => setShowModal(false)}\n                  icon={closeOutline}\n                />\n              </IonButton>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <div className=\"container p-6 text-xs\">\n            {`TERMOS E CONDIÇÕES GERAIS DE ADESÃO AO PROGRAMA ABERTO DE PARCERIA \nKIVID\n\nVersão XX/XX/2021\n\nEstes Termos e Condições Gerais regulam a adesão ao PROGRAMA ABERTO DE PARCERIA KIVID, ou simplesmente PROGRAMA, proposto pela XXXXXXXXXX (RAZÃO SOCIAL), pessoa jurídica de direito privado inscrita no CNPJ sob o n. º XXXXXXXXXXXXXXXX, com sede na Rua XXXXXXXXX  n. º XX, bairro XXXX, cidade de XXXXX/BA, CEP XXXXXXX, doravante denominada apenas “KIVID” ou “PARCEIRA OUTORGANTE”, e, na melhor forma do Direito, regulam o relacionamento entre a KIVID e o PARCEIRO, o qual declara ter lido, compreendido e aceito todos os termos e condições deste instrumento, que constitui a totalidade do acordo entre as Partes.\n\nA leitura, compreensão e aceitação destes Termos e Condições Gerais são condições obrigatórias e indispensáveis para a realização do cadastro e formalização da parceria proposta pela KIVID.\n\nPREZADO PARCEIRO, POR FAVOR LEIA COM ATENÇÃO ESTES TERMOS E CONDIÇÕES. AO SE CADASTRAR, VOCÊ CONCORDA E ACEITA OS TERMOS E CONDIÇÕES DESTE INSTRUMENTO. CASO NÃO CONCORDE, EM HIPÓTESE ALGUMA SIGA COM O CADASTRO.\n\nQualquer interessado em aderir ao PROGRAMA ABERTO DE PARCERIA KIVID deverá, antes de realizar seu cadastro, ler e aceitar estes Termos e Condições Gerais, a Política de Privacidade e todas as demais políticas e princípios que o regem.\n\nAo se cadastrar você concorda com os presentes Termos e Condições, a Política de Privacidade e todas as demais políticas e princípios que o regem e que estabelecem o relacionamento contratual entre você e a KIVID.\n\nMediante referido CADASTRO, estes Termos imediatamente encerram, substituem e superam todos os acordos, Termos e acertos anteriores entre PARCEIRO e a KIVID.\n\nACEITAÇÃO EXPRESSA DOS TERMOS E CONDIÇÕES DE USO\n\n1.1\tAo se cadastrar e/ou manter o cadastro ativo no PROGRAMA, o PARCEIRO declara ter lido, entendido e aceito os TERMOS e suas eventuais atualizações. Caso, a qualquer tempo, o PARCEIRO não concorde com os termos deverá cessar imediatamente solicitar o seu descadastramento e cessar a utilização qualquer aplicativo e/ou conta em website.\n\nDEFINIÇÕES DE TERMOS E EXPRESSÕES RELEVANTES\n\n2.1\tPara fins de interpretação do presente contrato os termos e expressões específicas a seguir listados, quando grafados em letras maiúsculas, independente de variação de gênero ou emprego do plural, deverão ser entendidos conforme as definições específicas nesta cláusula:\n\nCITAMOS AQUI ALGUNS EXEMPLOS PARA AVALIARMOS QUAIS DEFINIÇÕES SERÃO ESSENCIAIS NO SEU PROGRAMA:\na) KIVID (ou “PARCEIRA OUTORGANTE”): Pode significar tanto a pela XXXXXXXXXX (RAZÃO SOCIAL), pessoa jurídica de direito privado inscrita no CNPJ sob o n. º XXXXXXXXXXXXXXXX, com sede na Rua XXXXXXXXX  n. º XX, bairro XXXX, cidade de XXXXX/BA, CEP XXXXXXX, quanto seus prepostos, empresas controladas, subsidiárias, sucessoras ou contratadas, desde que especificamente indicados ao PARCEIRO como tal.\n\nb) PARCEIRO: É toda a pessoa física ou jurídica, ciente dos presentes termos, cadastrada na PLATAFORMA DE ADESÃO e devidamente regular com as obrigações e condicionantes de permanência no programa;\n\nc) PLATAFORMA DE ADESÃO: Ambiente, mecanismo ou canal disponibilizado e mantido pela KIVID por meio do qual o PARCEIRO pode aderir aos termos e condições do programa.\n\nd) PLATAFORMA: Conjunto de interfaces como aplicativo móvel (IOS ou ANDROID), website ou futuras formas de interface, oferecidas pela KIVID, que visam disponibilizar ao PARCEIRO um ambiente virtual para acesso às informações do PROGRAMA e sua CONTA.\n\ne) DADOS DE ACESSO: Informações de login e senha que permitem o acesso a uma Conta de Usuário na PLATAFORMA;\n\nf) DADOS DE CADASTRO: Informações do PARCEIRO, inseridas na PLATAFORMA DE ADESÃO, que permitam a abertura de uma Conta, a geração dos Dados de Acesso e a contratação dos Serviços;\n\ng) CADASTRO: Fornecimento, pelo PARCEIRO, de seus respectivos DADOS DE CADASTRO na PLATAFORMA DE ADESÃO, que implica em expressa aceitação do presente Termo;\n\nh) DADOS FINANCEIROS: Informações financeiras do PARCEIRO utilizados para viabilizar o pagamento pelo alcance do objeto da parceria;\n\ni) CONTA: Ambiente virtual acessível por meio dos DADOS DE ACESSO onde PARCEIRO poderá gerenciar seu cadastro e monitorar dados e movimentações relativas ao PROGRAMA;\n\nj) POLÍTICA DE PRIVACIDADE: Conjunto de diretrizes que regem a utilização das Informações;\n\nl) SOFTWARE DE TERCEIRO: Softwares de propriedade de terceiros destinados a prover, armazenamento de dados, meios de pagamento, entre outros, que se encontram, ou poderão vir a ser integrados à PLATAFORMA por meio de Interface de Programação de Aplicativos (“API”).\n\nm) PLANO ESTRATÉGICO DE MARKETING: Estratégias de comunicação a serem empreendidas pela KIVID no apoio à construção de imagem e relacionamento com públicos de interesse e negócios empresariais relacionados ao objeto da presente PARCERIA.\n\nn) POSSÍVEIS CLIENTES: Especificar\n\no) COMISSÃO: Retribuição pré-estabelecida, segundo as tabelas constantes do presente termo, paga ao PARCEIRO em razão dos negócios efetivamente concretizados (FECHAMENTO DA VENDA) entre o(s) cliente(s) por este indicado(s) à KIVID;\n\np) INDICAÇÃO DE SUCESSO: Negócio concretizado, devidamente formalizado pelo instrumento jurídico competente e efetivamente pago pelo cliente à KIVID;\n\nq) PLANILHA DE FECHAMENTO: Demonstrativo apresentado pela KIVID, referente ao valor da retribuição a ser recebida pelo PARCEIRO, com a discriminação dos valores recebidos no respectivo período.\n\nr) SERVIÇOS: Especificar\n\ns) CÓDIGOS PROMOCIONAIS: Identificações alfanuméricas confeccionadas de forma personalizada para o PARCEIRO OUTORGADO para vincular a adesão de potenciais clientes à sua atuação como intermediador.\n\nt) TERMO ESPECÍFICO “TAL”: Especificar. (confirmar eventuais outros temos específicos a tratar)\n\nOBJETO DA PARCERIA\n\n3.1\tConstitui objeto do PROGRAMA a PARCERIA entre a KIVID - PARCEIRA OUTORGANTE e o PARCEIRO - PARCEIRO OUTORGADO para a intermediação de negócios, por parte do PARCEIRO OUTORGADO, na promoção de venda dos SERVIÇOS comercializados pelo PARCEIRO OUTORGANTE, através da PLATAFORMA digital.\n\n3.2.\tA intermediação se dará por meio de CÓDIGOS PROMOCIONAIS que serão confeccionados de forma personalizada para o PARCEIRO OUTORGADO, que por sua vez poderá disponibilizá-los, através de variadas ferramentas digitais/comunicação, aos potenciais clientes dos serviços do PARCEIRO OUTORGANTE.\n\n3.3.\tO PARCEIRO OUTORGADO tem total autonomia em sua área de atuação na presente PARCERIA e desempenhará sua atividade de forma independente e sem subordinação.\n\n3.4.\tO objeto do presente PROGRAMA não implica nem se confunde com o agenciamento ou representação junto aos clientes da KIVID, estando o PARCEIRO expressamente desautorizado a realizar qualquer tipo de negociação, promessa, proposta, venda, conceder abatimentos ou descontos nos preços, nem tampouco receber valores em nome da PARCEIRA.\n\nDAS RETRIBUIÇÕES AO PARCEIRO\n\n4.1.\tO PARCEIRO perceberá, a título de retribuição, uma COMISSÃO pré-estabelecida em razão dos negócios efetivamente concretizados entre o(s) cliente(s) por este indicado(s) à KIVID. Uma vez que o cliente indicado finalizar a compra (INDICAÇÃO DE SUCESSO) com a KIVID, a COMISSÃO ficará disponível para pagamento conforme calendário de desembolso, disponível para consulta na PLATAFORMA (confirmar).\n\n4.1.1.\tO pagamento da COMISSÃO para o PARCEIRO Pessoa Jurídica é realizado mediante emissão e apresentação de nota fiscal à KIVID com código municipal que corresponda ao CNAE de promoção de vendas. Em caso de recebimento, pela KIVID, da nota fiscal antes do dia 01 de cada mês, o depósito do valor referente à COMISSÃO será feito em na conta bancária de titularidade do PARCEIRO até o quinto dia útil do mês seguinte. A conta bancária precisará ser de titularidade do mesmo CNPJ do emissor da nota fiscal.\n\n4.1.2.\tO pagamento da COMISSÃO para o PARCEIRO Pessoa Física é realizado mediante assinatura digital de recibo, podendo haver a solicitação do número do Cadastro de Contribuintes Mobiliários (CCM), de acordo com a legislação no município de atuação do PARCEIRO. Em caso de recebimento, pela KIVID, do recibo devidamente assinado antes do dia 01 de cada mês, o depósito do valor referente à COMISSÃO será feito em na conta bancária (corrente ou poupança) de titularidade do PARCEIRO até o quinto dia útil do mês seguinte. A conta bancária precisará ser de titularidade do mesmo CPF do cadastro do PARCEIRO junto à KIVID.\n\n4.2.\tA COMISSÃO devida ao PARCEIRO será fixa, calculada e paga conforme as seguintes premissas:\n\n4.2.1.\tAcaso o somatório das INDICAÇÕES DE SUCESSO seja superior a 70 (setenta), a KIVID poderá, a seu exclusivo critério, pontualmente propor ao PARCEIRO um valor superior à ultima faixa de COMISSÃO, considerando as peculiaridades regionais e mercadológicas da base de situação dos negócios.\n\n4.3.\tComo forma de bonificar os parceiros que estão mais engajados com a energia solar, a KIVID pagará um BÔNUS na COMISSÃO para caso de o PARCEIRO acumular determinados números de INDICAÇÃO DE SUCESSO no decorrer de um mesmo ano.\n\n4.3.1.\tNa virada de cada ano a contagem de INDICAÇÕES DE SUCESSO, para fins exclusivos do BÔNUS, é reiniciada, sendo o calendário sempre iniciado em 01 de janeiro e findo em 31 de dezembro.\n\nPAGAMENTOS\n\n5.1.\tO pagamento da COMISSÃO será realizado até o quinto dia útil do mês subsequente ao envio, à KIVID, do recibo devidamente assinado ou nota fiscal, conforme seja o PARCEIRO pessoa Física ou Jurídica. A forma de pagamento será por meio de transferência bancária em conta de titularidade do PARCEIRO, a ser informada no seu CADASTRO. Os comprovantes de concretização da operação bancária servirão como recibo e quitação da respectiva COMISSÃO pela KIVID.\n\nCOMUNICAÇÃO COM O USUÁRIO\n\n6.1.\tO PARCEIRO autoriza a KIVID a enviar notificações administrativas na PLATAFORMA, por e-mail, SMS, em publicação em seu site ou por qualquer outro meio de comunicação disponível com conteúdo de natureza informativa e promocional relacionados aos seus Serviços.\n\nALTERAÇÃO DOS TERMOS\n\n7.1.\tA KIVID se resguarda o direito de, unilateralmente e a seu exclusivo critério, realizar alterações e atualizações nos TERMOS E CONDIÇÕES GERAIS DE ADESÃO AO PROGRAMA ABERTO DE PARCERIA KIVID, a qualquer momento, sem a necessidade de aviso prévio, visando seu aprimoramento e a melhoria dos serviços prestados.\n\n7.1.1.\tEm caso de alterações dos Termos que restrinjam direitos do PARCEIRO, a KIVID comunicará tal alteração, ao seu critério, através dos meios de comunicação. Todavia, esta liberalidade não afasta a responsabilidade do PARCEIRO de verificar periodicamente os Termos, razão pela qual a KIVID recomenda a leitura atenta a cada acesso a PLATAFORMA. Caso o PARCEIRO não concorde com as alterações dos Termos, deverá solicitar o cancelamento do seu CADASTRO. O fato de o PARCEIRO continuar a acessar ou usar o seu CADASTRO após a atualização dos Termos representa seu consentimento em vincular-se aos Termos alterados.\n\nDADOS DO PARCEIRO E PRIVACIDADE\n\n8.1\tO PARCEIRO compreende e concorda, de maneira expressa, que a KIVID poderá coletar, armazenar, processar, associar, compartilhar, utilizar, divulgar ou de outro modo tratar as suas informações, incluindo os seus dados pessoais, sob qualquer uma das formas, para todas as finalidades correlatas com o objeto da presente PARCERIA e previstas na política de privacidade.\n\nDADOS COLETADOS\n\n9.1.\tAo se cadastrar na PLATAFORMA, serão requisitadas do USUÁRIO as seguintes informações, sem prejuízo da necessidade de quaisquer outras: Nome Completo, CPF, RG, e-mail, números de telefones, endereço, entre outros. \n\nFINALIDADES DO USO\n\n10.1.\tQualquer uma das informações que a KIVID coletar do PARCEIRO pode ser utilizada em uma das seguintes formas:\n\n(i) Para personalizar a sua experiência (a informação ajuda a KIVID a responder melhor às necessidades individuais do PARCEIRO);\n(ii) Para melhorar a PLATAFORMA (a KIVID se esforça continuamente para melhorar os serviços com base nas informações e feedback que recebe do PARCEIRO);\n(iii) Para melhorar o atendimento (a informação do PARCEIRO ajuda a KIVID a responder mais eficazmente às suas solicitações de serviço ao cliente e às necessidades de apoio);\n(iv) Para saber onde o USUÁRIO está por geolocalização ou qualquer outro meio (a informação de localização habilita a KIVID mapear sua rede de contatos);\n(v) Para administrar um concurso, promoção, pesquisa ou outro recurso da plataforma;\n(vi) Para enviar e-mails periódicos (O endereço de e-mail que o PARCEIRO fornece para processamento cadastro, pode ser usado para enviar informações e atualizações referentes a seu pedido, além de receber notícias ocasionais da KIVID, atualizações, informações sobre produtos ou serviços, etc.)\n(vii) Para eventualmente oferecer produtos e serviços relevantes ao PARCEIRO.\n\nDO COMPARTILHAMENTO DOS DADOS\n\n11.1.\tA KIVID não irá vender, comercializar ou transferir a terceiros as informações pessoais fornecidas pelo PARCEIRO. Isso não inclui terceiros de confiança que auxiliam a KIVID no funcionamento da PLATAFORMA, conduzindo o negócio, ou servindo ao PARCEIRO, desde que as os terceiros concordem e se obriguem a manter esta informação confidencial. Pode-se também divulgar as informações do PARCEIRO quando apropriado para cumprir a lei, fazer cumprir as políticas do aplicativo, ou proteger os direitos, propriedade ou segurança, da KIVID e dos outros. No entanto, as informações não pessoais podem ser fornecidas a terceiros para marketing, publicidade, ou outros usos.\n\n11.2. O PARCEIRO declara expressamente, e sob as penas de lei, ter consentimento expresso dos POSSÍVEIS CLIENTES para, por sua exclusiva conta e risco, compartilhar com a KIVID os dados de terceiros para fins de cumprir o objeto da presente PARCERIA.\n\nCADASTRO\n\n11.1.\tA adesão do PARCEIRO ao programa somente se dará mediante cadastro via PLATAFORMA DE ADESÃO. Para tanto, o PARCEIRO deve registrar-se e manter uma conta pessoal de usuário (“Conta”), obrigatoriamente, preenchendo os campos de cadastro ali exigidos, respondendo pela veracidade das informações declaradas, obrigando-se a manter informações válidas, atualizadas e corretas. Em caso de não confirmação de seus dados, o acesso do PARCEIRO à PLATAFORMA poderá ser bloqueado, a exclusivo critério da KIVID. A conta do PARCEIRO é exclusivo e intransferível.\n\n11.1.1\tO PARCEIRO, para criar seu perfil, se Pessoa Física, deve ter capacidade civil, com idade mínima de 18 anos, a menos que seja emancipado ou tenha obtido plena capacidade civil nos termos da legislação civil em vigor. Se Pessoa Jurídica, o PARCEIRO deve estar devidamente constituído, nos termos da legislação aplicável ao tipo empresarial aplicável à forma em que constituído.\n\n11.2.\tAs informações da Conta são de exclusiva responsabilidade de quem as inseriu. No caso de acarretarem danos ou prejuízo de qualquer espécie, as medidas cabíveis podem ser tomadas pela KIVID a fim de resguardar seus interesses e a integridade dos demais parceiros e/ou terceiros.\n\nDOS PRAZOS\n\n12.1\tA presente PARCERIA tem como termo inicial da sua vigência o CADASTRO do PARCEIRO na PLATAFORMA e tem prazo de duração indeterminado.\n\nMODIFICAÇÃO OU ENCERRAMENTO DO PROGRAMA DE PARCERIA\n\n13.1.\tA KIVID se reserva no direito de, a qualquer tempo, modificar ou descontinuar, temporária ou permanentemente, a PARCERIA, com ou sem prévia notificação do PARCEIRO. O PARCEIRO concorda que a KIVID não será responsabilizada, nem terá qualquer obrigação adicional, implícita ou explícita, para com o PARCEIRO ou terceiros em razão de qualquer modificação, suspensão ou encerramento do PROGRAMA.\n\n13.1.1.\tO PARCEIRO pode, também a seu exclusivo critério e independentemente de qualquer prévia notificação ou anuência da KIVID, deixar de participar do PROGRAMA, bastando, para tanto, proceder ao pedido de descadastramento na PLATAFORMA.\n\n13.2.\tO encerramento do PROGRAMA não prejudicará o cumprimento das obrigações financeiras relativas à COMISSÃO decorrente de INDICAÇÃO DE SUCESSO realizada anteriormente.\n\n13.3.\tOcorrendo o encerramento do PROGRAMA ou o descadastramento na PLATAFORMA, o PARCEIRO deverá devolver todos os documentos (desenhos, informações, certificados, especificações técnicas) que eventualmente estejam em seu poder e sejam de propriedade da KIVID, no prazo de 10 (dez) dias corridos, contados da data da extinção do vínculo. Ainda neste caso, a KIVID se compromete a se desfazer e apagar todos os dados pessoais e informações relativas ao PARCEIRO que eventualmente detenha.\n\n13.4.\tSeja qual for a hipótese de encerramento do vínculo nos termo previsto nesta cláusula (encerramento do PROGRAMA ou o descadastramento na PLATAFORMA), as partes convencionam que nenhuma delas terá direito a qualquer indenização ou ressarcimento de eventual investimento realizado.\n\nEXCLUSÃO DO PROGRAMA E CANCELAMENTO DE ACESSO À PLATAFORMA\n\n14.1.\tO PARCEIRO concorda que a KIVID, à sua livre discrição, poderá excluir o PARCEIRO ou suspender/cancelar seu acesso à PLATAFORMA, incluindo, mas não se limitando por ocasião de: (i) descumprimentos e/ou violação destes Termos; (ii) ordem judicial ou requisição legal e competente de autoridade governamental; (iii) requisição do próprio PARCEIRO; (iv) caso fortuito, força maior e/ou questões de segurança; (v) inatividade da conta por um período razoável de tempo; (vi) suposta prática de qualquer atividade fraudulenta ou ilegal por parte do PARCEIRO, a critério da KIVID; (vii) uso inadequado da PLATAFORMA, a critério da KIVID; e/ou (viii) por inadimplemento por parte do PARCEIRO de quaisquer obrigações, valores, pagamentos devidos, quando aplicável.\n\n14.2.\tO PARCEIRO concorda que o término de seu acesso à PLATAFORMA, por qualquer razão constante desta cláusula, pode ocorrer sem notificação prévia e que todas as informações e dados constantes poderão ser permanentemente apagados.\n\nUSO DA MARCA\n\n15.1.\tFica vedado o uso das marcas da KIVID para qualquer outra finalidade alheia ao presente PROGRAMA, sob pena de EXCLUSÃO do PROGRAMA, somando-se ainda eventuais perdas e danos referentes ao uso indevido da marca.\n\n15.2.\tAs partes reciprocamente e de forma expressa autorizam a utilização gratuita de seus nomes e marcas comerciais para divulgação da condição de parceiro em seus portfólios por quaisquer meios físicos ou digitais, inclusive em rede sociais, desde que com isto não implique nenhuma circunstância ilegal, vexatória, constrangedora ou que prejudique moralmente a posição das partes no mercado, dispensando-se que a forma de utilização das marcas seja previamente validada pelos seus respectivos proprietários.\nCLÁUSULA DÉCIMA TERCEIRA: BOA-FÉ E PROBIDADE\n\n16.1.\tAs PARTES se comprometem com a prática de comportamento idôneo, com probidade, honestidade e retidão no agir durante o cumprimento do contrato, deveres estes inerentes a todo e qualquer termo de parceria comercial, com uma atuação em colaboração em todas as fases pelas quais passam a obrigação e o contrato.\n\nDISPOSIÇÕES GERAIS\n\n17.1.\tAs atividades decorrentes da parceria celebrada neste instrumento não se caracterizam, em nenhuma hipótese, como relação trabalhista, vínculo de sociedade, mandato, representação, subordinação, solidariedade, bem como nenhum vínculo previdenciário, tributário ou de qualquer outra natureza.\n\n17.2.\tCaso alguma uma autoridade competente considerar alguma disposição deste Termo inválida ou inexequível, essa inexequibilidade ou invalidade não tornará o PROGRAMA inexequível ou inválido como um todo e, nesse caso, essa disposição será alterada e interpretada de forma a ser cumpridos os objetivos dessa disposição inexequível ou inválida, observando-se os limites da lei aplicável ou das decisões judiciárias aplicáveis.\n\n17.3.\tEste Acordo constitui a declaração completa e exclusiva do ajustado entre as partes com relação ao objeto deste instrumento e substitui todas as discussões, negociações e acordos anteriores e atuais, orais ou escritos, com relação a tal objeto.\n\n17.4.\tToda comunicação, instrução, ou reclamação entre as Partes deverá ser feita por escrito, não produzindo qualquer efeito as tratativas, alegações ou instruções verbais. TODAS as notificações e/ou comunicações a serem enviadas à PARCEIRA OUTORGANTE em razão de divergências tocantes ao quanto pactuado neste instrumento deverão ser, preferencialmente, realizadas por correio eletrônico (e-mail) para os seguintes endereços conjuntamente: xxxxxxxxx@xxxxxxx.com.br ; xxxxxxxxx@xxxxxxx.com.br; e xxxxxxxxx@xxxxxxx.com.br. \n\n17.5.\tRessalvadas as hipóteses expressamente previstas, as obrigações e direitos do presente Termo não podem ser cedidos ou transferidos no todo ou em parte.\n\n17.6.\tA tolerância de uma das partes ao inadimplemento de qualquer obrigação contratual pela outra não implicará em novação objetiva ou alteração contratual.\n\nLEGISLAÇÃO, JURISDIÇÃO E FORO\n\n18.1. O presente PROGRAMA é regido e regulamentado pela Legislação Brasileira, aplicando-se a ele todas as prerrogativas legais cabíveis à matéria e vigentes no País.\n\n18.2. As partes elegem o Foro da Comarca de Salvador, no estado da Bahia, para dirimir toda e qualquer dúvida oriunda da correta interpretação do quanto expressado por este Instrumento Particular e que redunde em litígio, com renúncia de qualquer outro, por mais privilegiado que seja.\n\nSalvador/BA, xx de xxxxx de 202X.\n\nKIVID\nCNPJ sob o n. xxxxxxxxxxxxxx`}\n          </div>\n        </IonContent>\n      </IonModal>\n    </IonPage>\n  );\n};\n\nexport default SignIn;\n","import { Redirect, Route } from \"react-router-dom\";\nimport { IonApp, IonRouterOutlet, setupIonicReact } from \"@ionic/react\";\nimport { IonReactHashRouter } from \"@ionic/react-router\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\n// import \"@ionic/react/css/float-elements.css\";\n// import \"@ionic/react/css/text-alignment.css\";\n// import \"@ionic/react/css/text-transformation.css\";\n// import \"@ionic/react/css/flex-utils.css\";\n// import \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\n\nimport SignUp from \"pages/SignUp\";\nimport Tabs from \"pages/Tabs\";\nimport SignIn from \"pages/SignIn\";\n\nsetupIonicReact({\n  mode: \"ios\",\n});\n\nconst App: React.FC = () => {\n  return (\n    <IonApp>\n      <IonReactHashRouter>\n        <IonRouterOutlet>\n          <Route exact path=\"/cadastro\">\n            <SignUp />\n          </Route>\n          <Route exact path=\"/login\">\n            <SignIn />\n          </Route>\n          <Route path=\"/home\">\n            <Tabs />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n        </IonRouterOutlet>\n      </IonReactHashRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}